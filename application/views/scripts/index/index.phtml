<div class="page-header">
	<h1>
		phpBeanstalkdAdmin
		<small>The Beanstalkd admin interface</small>
	</h1>
</div>

<form id="parameters" class="well form-inline" action="<?=$this->baseUrl()?>/" method="get">
	<label>
		Server:
		<input id="server" name="server" type="text" value="<?=$this->server?>">
	</label>
	<label class="checkbox">
		<input id="poll" type="checkbox"> refresh every
	</label>
	<label>
		<input id="pollInterval" name="pollInterval" type="number" value="5"> seconds
	</label>
	<button id="parametersApply" type="submit" class="btn btn-primary pull-right">Apply</button>
</form>

<div id="successMessage" class="alert hide">
	<a class="close" data-dismiss="alert" href="#">×</a>
	<h4 class="alert-heading">Success</h4>

	<div class="content"></div>
</div>

<div id="errorMessage" class="alert alert-error hide">
	<a class="close" data-dismiss="alert" href="#">×</a>
	<h4 class="alert-heading">Error!</h4>

	<div class="content"></div>
</div>

<h2>
	Tubes
</h2>

<div class="tube-model well hide">

	<h3>Tube '<span class="tube-name"></span>'</h3>

	<h4>Next job ready</h4>

	<div class="job-ready clearfix hide">
		<span class="label job-id"></span>
		<span class="job-data"></span>
		<button class="bury-job btn btn-mini pull-right"
				data-job-id="" data-tube="" onClick="buryJob(this)">
			<i class="icon-circle-arrow-down"></i>
			Bury the job
		</button>
		<button class="delete-job btn btn-mini btn-danger pull-right"
				data-job-id="" onClick="deleteJob(this)">
			<i class="icon-remove icon-white"></i>
			Delete the job
		</button>
	</div>
	<div class="job-ready-none text-disabled">
		None
	</div>

	<h4>Next job buried</h4>

	<div class="job-buried clearfix hide">
		<span class="label label-warning">Buried</span>
		<span class="label job-id"></span>
		<span class="job-data"></span>
		<div>
			<input id="kickamount" type="text" name="anount" min="1" max="100" value="1" style="width: 45px;" onChange="setAmount(this);" />
			<button class="kick-jobs btn btn-mini"
					data-tube="" onClick="kickJobs(this);">
				<i class="icon-circle-arrow-up"></i>
				Kick one job
			</button>
		</div>
	</div>
	<div class="job-buried-none text-disabled">
		None
	</div>

</div>

<div class="tube-list"></div>


<form id="addJob" class="well form-inline" action="<?=$this->baseUrl()?>/index/add" method="post">

	<h3>Add a job</h3>

	<input id="addJobData" name="data" type="text" placeholder="Data">
	<input id="addJobTube" name="tube" type="text" placeholder="Tube name">
	<button id="addJobSubmit" type="submit" class="btn btn-primary">
		Add to job queue
	</button>

	<div id="addJobSuccess" class="alert alert-success hide">
		<a class="close" data-dismiss="alert" href="#">×</a>
		<strong>Job added to the queue.</strong>
	</div>

</form>


<script>

	function Job(id, data) {
		this.id = id;
		this.data = data;
	}

	function clearTubeList() {
		$(".tube-list").empty();
	}

	var amount = 1;

	/**
	 *
	 * @param name
	 * @param {Job} jobReady
	 * @param {Job} jobBuried
	 */
	function addTube(name, jobReady, jobBuried) {
		var tube = $(".tube-model").clone().removeClass("tube-model").addClass("tube");
		// Tube name
		tube.find(".tube-name").text(name);
		// Job ready
		if (jobReady !== null) {
			tube.find(".job-ready .job-id").text(jobReady.id);
			tube.find(".job-ready .job-data").text(jobReady.data);
			tube.find(".job-ready-none").hide();
			tube.find(".job-ready .bury-job").data("job-id", jobReady.id);
			tube.find(".job-ready .bury-job").data("tube", name);
			tube.find(".job-ready .delete-job").data("job-id", jobReady.id);
			tube.find(".job-ready").show();
		}
		// Job buried
		if (jobBuried !== null) {
			tube.find(".job-buried .job-id").text(jobBuried.id);
			tube.find(".job-buried .job-data").text(jobBuried.data);
			tube.find(".job-buried-none").hide();
			tube.find(".job-buried .kick-jobs").data("tube", name);
			tube.find(".job-buried").show();
		}
		$(".tube-list").append(tube);
		tube.show();
	}

	function refreshList() {
		$("#errorMessage").fadeOut();
		var server = $("#parameters #server").val();
		$.ajax({
			type: "POST",
			url: baseUrl + "/job/get-list",
			dataType: "json",
			data: { server: server },
			success: function(data) {
				clearTubeList();
				// For each tube
				for (var tube in data){
					if (data.hasOwnProperty(tube)) {
						var jobs = data[tube];
						var jobReady = null;
						var jobBuried = null;
						for (var i = 0; i < jobs.length; i++) {
							var job = new Job(jobs[i]["id"], jobs[i]["data"]);
							switch(jobs[i]["status"]) {
								case "ready":
									jobReady = job;
									break;
								case "buried":
									jobBuried = job;
									break;
							}
						}
						// Add the tube
						addTube(tube, jobReady, jobBuried);
					}
				}
			},
			error: function(xhr) {
				$("#jobList tbody").empty();
				$("#errorMessage .content").text(jQuery.parseJSON(xhr.responseText));
				$("#errorMessage").fadeIn();
			}
		});
	}

	function deleteJob(button) {
		var server = $("#parameters #server").val();
		var jobId = $(button).data("job-id");
		$.ajax({
			type: "POST",
			url: baseUrl + "/job/delete",
			dataType: "json",
			data: { server: server, id: jobId },
			success: function(data) {
				refreshList();
			},
			error: function(xhr) {
				messageBox(jQuery.parseJSON(xhr.responseText));
			}
		});
	}

	function buryJob(button) {
		var server = $("#parameters #server").val();
		var jobId = $(button).data("job-id");
		var tube = $(button).data("tube");
		$.ajax({
			type: "POST",
			url: baseUrl + "/job/bury",
			dataType: "json",
			data: { server: server, tube: tube, id: jobId },
			success: function(data) {
				refreshList();
			},
			error: function(xhr) {
				messageBox(jQuery.parseJSON(xhr.responseText));
			}
		});
	}

	function kickJobs(button) {
		var server = $("#parameters #server").val();
		var tube = $(button).data("tube");
		var count = (amount) ? amount : 1;
		$.ajax({
			type: "POST",
			url: baseUrl + "/job/kick",
			dataType: "json",
			data: { server: server, tube: tube, count: count },
			success: function(data) {
				refreshList();
			},
			error: function(xhr) {
				messageBox(jQuery.parseJSON(xhr.responseText));
			}
		});
	}

	function setAmount(field) {
		amount = $(field).val();
	}

	$(function() {
		refreshList();

		var intervalId;
		$("#parametersApply").click(function(e) {
			e.preventDefault();
			refreshList();
			clearInterval(intervalId);
			var refresh = $("#poll").attr('checked');
			// Auto-refresh
			if (refresh == 'checked') {
				var pollInterval = $("#pollInterval").val();
				if (pollInterval < 0) {
					pollInterval = 1;
				}
				intervalId = setInterval(refreshList, pollInterval * 1000);
			}
		});

		$("#addJobSubmit").click(function(e) {
			e.preventDefault();
			var server = $("#parameters #server").val();
			var data = $("#addJob #addJobData").val();
			var tube = $("#addJob #addJobTube").val();
			$.ajax({
				type: "POST",
				url: baseUrl + "/job/add",
				dataType: "json",
				data: { server: server, data: data, tube: tube },
				success: function(data) {
					$("#addJob #addJobData").val("");
					$("#addJobSuccess").show();
					setTimeout(function() {
						$("#addJobSuccess").fadeOut();
					}, 5000);
					refreshList();
				},
				error: function(xhr) {
					messageBox(jQuery.parseJSON(xhr.responseText));
				}
			});
		});

	});

</script>
